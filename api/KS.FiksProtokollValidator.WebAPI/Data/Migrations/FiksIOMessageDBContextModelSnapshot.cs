// <auto-generated />
using System;
using KS.FiksProtokollValidator.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KS.FiksProtokollValidator.WebAPI.Data.Migrations
{
    [DbContext(typeof(FiksIOMessageDBContext))]
    partial class FiksIOMessageDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KS.FiksProtokollValidator.WebAPI.Models.FiksRequest", b =>
                {
                    b.Property<Guid>("MessageGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TestCaseId")
                        .HasColumnType("int");

                    b.Property<Guid?>("TestSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MessageGuid");

                    b.HasIndex("TestCaseId");

                    b.HasIndex("TestSessionId");

                    b.ToTable("FiksRequest");
                });

            modelBuilder.Entity("KS.FiksProtokollValidator.WebAPI.Models.FiksResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("FiksRequestMessageGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayloadContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FiksRequestMessageGuid");

                    b.ToTable("FiksResponse");
                });

            modelBuilder.Entity("KS.FiksProtokollValidator.WebAPI.Models.FiksResponseTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExpectedValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayloadQuery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TestCaseId")
                        .HasColumnType("int");

                    b.Property<int>("ValueType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestCaseId");

                    b.ToTable("FiksResponseTest");
                });

            modelBuilder.Entity("KS.FiksProtokollValidator.WebAPI.Models.TestCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayloadAttachmentFileNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayloadFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TestName")
                        .IsUnique();

                    b.ToTable("TestCases");
                });

            modelBuilder.Entity("KS.FiksProtokollValidator.WebAPI.Models.TestSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TestSessions");
                });

            modelBuilder.Entity("KS.FiksProtokollValidator.WebAPI.Models.FiksRequest", b =>
                {
                    b.HasOne("KS.FiksProtokollValidator.WebAPI.Models.TestCase", "TestCase")
                        .WithMany()
                        .HasForeignKey("TestCaseId");

                    b.HasOne("KS.FiksProtokollValidator.WebAPI.Models.TestSession", null)
                        .WithMany("FiksRequests")
                        .HasForeignKey("TestSessionId");
                });

            modelBuilder.Entity("KS.FiksProtokollValidator.WebAPI.Models.FiksResponse", b =>
                {
                    b.HasOne("KS.FiksProtokollValidator.WebAPI.Models.FiksRequest", null)
                        .WithMany("FiksResponses")
                        .HasForeignKey("FiksRequestMessageGuid");
                });

            modelBuilder.Entity("KS.FiksProtokollValidator.WebAPI.Models.FiksResponseTest", b =>
                {
                    b.HasOne("KS.FiksProtokollValidator.WebAPI.Models.TestCase", null)
                        .WithMany("FiksResponseTests")
                        .HasForeignKey("TestCaseId");
                });
#pragma warning restore 612, 618
        }
    }
}
